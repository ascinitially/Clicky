{"ast":null,"code":"var _jsxFileName = \"/Users/Blaise/bc/Homeworks/Clicky/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nlet points = 0;\nlet highScore = 0;\nlet friendArr = friends;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friendArr\n    };\n\n    this.restart = () => {\n      for (var i = 0; i < friendArr.length; i++) {\n        friendArr[i][\"clicked\"] = \"n\";\n      }\n\n      this.setState(friendArr);\n      points = 0;\n    };\n\n    this.markClicked = id => {\n      const friendClicked = this.state.friendArr.filter(friend => friend.id === id); // this.processClick(id);\n\n      if (friendClicked[0][\"clicked\"] === \"n\") {\n        friendClicked[0][\"clicked\"] = \"y\";\n        points++;\n      } else {\n        alert(\"Game Over\");\n        this.restart();\n      }\n\n      this.setState(friendArr);\n      console.log(this.state);\n      this.shuffleFriends();\n    };\n\n    this.shuffleFriends = () => {\n      this.state.friendArr.sort(() => Math.random() - 0.5); // this.render();\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Title, {\n      title: title,\n      points: points,\n      highScore: highScore,\n      instruction: this.getInstruction(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), friendArr.map(friend => React.createElement(FriendCard, {\n      markClicked: this.markClicked,\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst title = \"Clicky Game\";\nexport default App;","map":{"version":3,"sources":["/Users/Blaise/bc/Homeworks/Clicky/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","points","highScore","friendArr","App","state","restart","i","length","setState","markClicked","id","friendClicked","filter","friend","alert","console","log","shuffleFriends","sort","Math","random","render","title","getInstruction","map","removeFriend","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAGA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,SAAS,GAAGH,OAAhB;;AACA,MAAMI,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAG1BS,KAH0B,GAGlB;AACNF,MAAAA;AADM,KAHkB;;AAAA,SAc1BG,OAd0B,GAchB,MAAM;AACd,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAEJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCJ,QAAAA,SAAS,CAACI,CAAD,CAAT,CAAa,SAAb,IAA0B,GAA1B;AACD;;AACD,WAAKE,QAAL,CAAcN,SAAd;AACAF,MAAAA,MAAM,GAAG,CAAT;AACD,KApByB;;AAAA,SAuB1BS,WAvB0B,GAuBXC,EAAD,IAAQ;AACpB,YAAMC,aAAa,GAAG,KAAKP,KAAL,CAAWF,SAAX,CAAqBU,MAArB,CAA4BC,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcA,EAApD,CAAtB,CADoB,CAEpB;;AACA,UAAIC,aAAa,CAAC,CAAD,CAAb,CAAiB,SAAjB,MAAgC,GAApC,EAAyC;AACvCA,QAAAA,aAAa,CAAC,CAAD,CAAb,CAAiB,SAAjB,IAA8B,GAA9B;AACAX,QAAAA,MAAM;AACP,OAHD,MAGO;AACLc,QAAAA,KAAK,CAAC,WAAD,CAAL;AAEA,aAAKT,OAAL;AACD;;AACD,WAAKG,QAAL,CAAcN,SAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,WAAKa,cAAL;AACD,KArCyB;;AAAA,SAuC1BA,cAvC0B,GAuCT,MAAM;AACrB,WAAKb,KAAL,CAAWF,SAAX,CAAqBgB,IAArB,CAA2B,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjD,EADqB,CAErB;AACD,KA1CyB;AAAA;;AA4C1B;AACAC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,KAAd;AAAqB,MAAA,MAAM,EAAEtB,MAA7B;AAAqC,MAAA,SAAS,EAAEC,SAAhD;AAA2D,MAAA,WAAW,EAAE,KAAKsB,cAAL,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIGrB,SAAS,CAACsB,GAAV,CAAcX,MAAM,IACnB,oBAAC,UAAD;AACE,MAAA,WAAW,EAAE,KAAKJ,WADpB;AAEE,MAAA,YAAY,EAAE,KAAKgB,YAFrB;AAGE,MAAA,EAAE,EAAEZ,MAAM,CAACH,EAHb;AAIE,MAAA,GAAG,EAAEG,MAAM,CAACH,EAJd;AAKE,MAAA,IAAI,EAAEG,MAAM,CAACa,IALf;AAME,MAAA,KAAK,EAAEb,MAAM,CAACc,KANhB;AAOE,MAAA,UAAU,EAAEd,MAAM,CAACe,UAPrB;AAQE,MAAA,QAAQ,EAAEf,MAAM,CAACgB,QARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAmBD;;AAjEyB;;AAoE5B,MAAMP,KAAK,GAAG,aAAd;AAEA,eAAenB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\nlet points = 0;\nlet highScore = 0;\nlet friendArr = friends;\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n \n  state = {\n    friendArr,\n  };\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  restart = () => {\n    for (var i = 0 ; i <friendArr.length; i++) {\n      friendArr[i][\"clicked\"] = \"n\";\n    }\n    this.setState(friendArr);\n    points = 0;\n  }\n\n\n  markClicked = (id) => {\n    const friendClicked = this.state.friendArr.filter(friend => friend.id === id);\n    // this.processClick(id);\n    if (friendClicked[0][\"clicked\"] === \"n\") {\n      friendClicked[0][\"clicked\"] = \"y\";\n      points++;\n    } else {\n      alert(\"Game Over\");\n\n      this.restart();\n    }   \n    this.setState(friendArr);\n    console.log(this.state);\n    this.shuffleFriends();\n  };\n\n  shuffleFriends = () => {\n    this.state.friendArr.sort((() => Math.random() - 0.5));\n    // this.render();\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        {/* <Navbar></Navbar> */}\n        <Title title={title} points={points} highScore={highScore} instruction={this.getInstruction()}></Title>\n        \n        {friendArr.map(friend => (\n          <FriendCard\n            markClicked={this.markClicked}\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nconst title = \"Clicky Game\";\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}